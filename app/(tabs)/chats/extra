import React, { useState } from "react";
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  ScrollView,
  StatusBar,
  Image,
  ActivityIndicator,
} from "react-native";
import { ChevronLeft, Search } from "lucide-react-native";
import {
  useFonts,
  Poppins_400Regular,
  Poppins_500Medium,
  Poppins_600SemiBold,
  Poppins_700Bold,
} from "@expo-google-fonts/poppins";
import { router } from "expo-router";

const FONT = {
  Regular: "Poppins_400Regular",
  Medium: "Poppins_500Medium",
  SemiBold: "Poppins_600SemiBold",
  Bold: "Poppins_700Bold",
};

interface FavoritePerson {
  id: string;
  name: string;
  image: string;
}

interface Chat {
  id: string;
  name: string;
  message: string;
  time: string;
  image?: string;
  isVerified?: boolean;
  isOnline?: boolean;
  unreadCount?: number;
  isDoubleTick?: boolean;
}

export default function ChatsPerson() {
  const [searchText, setSearchText] = useState("");

  const [fontsLoaded] = useFonts({
    Poppins_400Regular,
    Poppins_500Medium,
    Poppins_600SemiBold,
    Poppins_700Bold,
  });

  const favorites: FavoritePerson[] = [
    {
      id: "1",
      name: "Gyllinton",
      image:
        "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=100",
    },
    {
      id: "2",
      name: "Alex Collins...",
      image:
        "https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=100",
    },
    {
      id: "3",
      name: "Margo Millen",
      image:
        "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100",
    },
    {
      id: "4",
      name: "Margo Millen",
      image:
        "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100",
    },
    {
      id: "5",
      name: "Anna Vintour",
      image:
        "https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=100",
    },
  ];

  const chats: Chat[] = [
    {
      id: "1",
      name: "Gyllinton",
      message: "I don't know what you're ...",
      time: "2:00",
      image:
        "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=100",
      isOnline: false,
      isDoubleTick: true,
    },
    {
      id: "2",
      name: "Gyllinton",
      message: "I don't know what you're ...",
      time: "2:00",
      isVerified: true,
      isOnline: true,
      isDoubleTick: true,
    },
    {
      id: "3",
      name: "Gyllinton",
      message: "I don't know what you're ...",
      time: "2:00",
      image:
        "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100",
      isVerified: true,
      isOnline: true,
      unreadCount: 3,
    },
    {
      id: "4",
      name: "Gyllinton",
      message: "Yass.ðŸ˜˜",
      time: "Friday",
      image:
        "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100",
      isOnline: true,
    },
  ];

  if (!fontsLoaded) {
    return (
      <View className="flex-1 items-center justify-center bg-black">
        <ActivityIndicator color="#FCCD34" />
      </View>
    );
  }

  return (
    <View className="flex-1 bg-black">
      <StatusBar barStyle="light-content" />

      {/* Header */}
      <View className="pt-12 pb-4 px-5">
        <View className="flex-row items-center justify-between mb-5">
          <TouchableOpacity onPress={() => router.back()}>
            <ChevronLeft size={28} color="white" />
          </TouchableOpacity>
          <Text
            className="text-white text-xl"
            style={{ fontFamily: FONT.SemiBold }}
          >
            Chats
          </Text>
          <View style={{ width: 28 }} />
        </View>

        {/* Search Bar */}
        <View className="flex-row items-center gap-3">
          <View className="flex-1 flex-row items-center bg-[#1C1C1E] rounded-full px-4 py-3">
            <Search size={20} color="#8E8E93" />
            <TextInput
              value={searchText}
              onChangeText={setSearchText}
              placeholder="Search"
              placeholderTextColor="#8E8E93"
              className="flex-1 ml-2 text-white"
              style={{ fontFamily: FONT.Regular, fontSize: 16 }}
            />
          </View>
          <TouchableOpacity className="p-2">
            <View className="gap-1">
              <View className="flex-row gap-1">
                <View className="w-1 h-1 bg-white rounded-full" />
                <View className="w-1 h-1 bg-white rounded-full" />
                <View className="w-1 h-1 bg-white rounded-full" />
              </View>
              <View className="flex-row gap-1">
                <View className="w-1 h-1 bg-white rounded-full" />
                <View className="w-1 h-1 bg-white rounded-full" />
                <View className="w-1 h-1 bg-white rounded-full" />
              </View>
              <View className="flex-row gap-1">
                <View className="w-1 h-1 bg-white rounded-full" />
                <View className="w-1 h-1 bg-white rounded-full" />
                <View className="w-1 h-1 bg-white rounded-full" />
              </View>
            </View>
          </TouchableOpacity>
        </View>
      </View>

      <ScrollView className="flex-1">
        {/* Favorites Section */}
        <View className="px-5 mb-4">
          <View className="flex-row items-center justify-between mb-4">
            <Text
              className="text-white text-lg"
              style={{ fontFamily: FONT.SemiBold }}
            >
              Favorites
            </Text>
            <Text
              className="text-gray-500 text-sm"
              style={{ fontFamily: FONT.Regular }}
            >
              See All...
            </Text>
          </View>

          <ScrollView horizontal showsHorizontalScrollIndicator={false}>
            <View className="flex-row gap-4">
              {favorites.map((person) => (
                <TouchableOpacity key={person.id} className="items-center">
                  <View className="w-16 h-16 rounded-full overflow-hidden border-2 border-[#FCCD34] mb-2">
                    <Image
                      source={{ uri: person.image }}
                      style={{ width: "100%", height: "100%" }}
                      resizeMode="cover"
                    />
                  </View>
                  <Text
                    className="text-white text-xs text-center"
                    style={{ fontFamily: FONT.Regular, maxWidth: 70 }}
                    numberOfLines={1}
                  >
                    {person.name}
                  </Text>
                </TouchableOpacity>
              ))}
            </View>
          </ScrollView>
        </View>

        {/* Chat List */}
        <View className="flex-1">
          {chats.map((chat) => (
            <TouchableOpacity
              key={chat.id}
              className="flex-row items-center px-5 py-3"
              activeOpacity={0.7}
              onPress={() => router.push("/(tabs)/chats/chat")}
            >
              {/* Profile Picture */}
              <View className="relative mr-4">
                {chat.image ? (
                  <Image
                    source={{ uri: chat.image }}
                    style={{ width: 60, height: 60 }}
                    className="rounded-full"
                    resizeMode="cover"
                  />
                ) : (
                  <View className="w-15 h-15 rounded-full bg-gray-600 items-center justify-center">
                    <Text
                      className="text-white text-2xl"
                      style={{ fontFamily: FONT.SemiBold }}
                    >
                      G
                    </Text>
                  </View>
                )}
                {chat.isOnline && (
                  <View className="absolute bottom-0 right-0 w-4 h-4 bg-green-500 rounded-full border-2 border-black" />
                )}
              </View>

              {/* Chat Info */}
              <View className="flex-1">
                <View className="flex-row items-center mb-1">
                  <Text
                    className="text-white text-base"
                    style={{ fontFamily: FONT.SemiBold }}
                  >
                    {chat.name}
                  </Text>
                  {chat.isVerified && (
                    <View className="ml-1 w-4 h-4 bg-[#FCCD34] rounded-full items-center justify-center">
                      <Text className="text-black text-xs font-bold">âœ“</Text>
                    </View>
                  )}
                </View>
                <Text
                  className="text-gray-400 text-sm"
                  style={{ fontFamily: FONT.Regular }}
                  numberOfLines={1}
                >
                  {chat.message}
                </Text>
              </View>

              {/* Time and Status */}
              <View className="items-end ml-3">
                <View className="flex-row items-center mb-1">
                  {chat.isDoubleTick && (
                    <Image
                      source={require("../../../assets/images/double-tick.png")}
                      style={{
                        width: 16,
                        height: 12,
                        marginRight: 4,
                        tintColor: chat.unreadCount ? "#FCCD34" : "#666",
                      }}
                      resizeMode="contain"
                    />
                  )}
                  <Text
                    className={`text-sm ${
                      chat.unreadCount ? "text-white" : "text-gray-500"
                    }`}
                    style={{ fontFamily: FONT.Regular }}
                  >
                    {chat.time}
                  </Text>
                </View>
                {chat.unreadCount && (
                  <View className="w-6 h-6 bg-[#FCCD34] rounded-full items-center justify-center">
                    <Text
                      className="text-black text-xs"
                      style={{ fontFamily: FONT.Bold }}
                    >
                      {chat.unreadCount}
                    </Text>
                  </View>
                )}
              </View>
            </TouchableOpacity>
          ))}
        </View>
      </ScrollView>

      {/* Bottom Navigation */}
      <View className="flex-row items-center justify-around bg-black border-t border-gray-800 pb-8 pt-3">
        <TouchableOpacity
          className="items-center"
          onPress={() => router.push("/(tabs)/discover")}
        >
          <View className="w-6 h-6 rounded-full border-2 border-gray-500 mb-1" />
          <Text
            className="text-gray-500 text-xs"
            style={{ fontFamily: FONT.Medium }}
          >
            Discover
          </Text>
        </TouchableOpacity>

        <TouchableOpacity className="items-center">
          <View className="mb-1">
            <View className="w-6 h-5 bg-[#FCCD34] rounded-md items-center justify-center">
              <View className="w-4 h-0.5 bg-black mb-1" />
              <View className="w-4 h-0.5 bg-black" />
            </View>
          </View>
          <Text
            className="text-[#FCCD34] text-xs"
            style={{ fontFamily: FONT.Medium }}
          >
            Chats
          </Text>
        </TouchableOpacity>

        <TouchableOpacity
          className="items-center"
          onPress={() => router.push("/(tabs)/profile")}
        >
          <View className="w-6 h-6 rounded-full bg-gray-600 mb-1" />
          <Text
            className="text-gray-500 text-xs"
            style={{ fontFamily: FONT.Medium }}
          >
            Profile
          </Text>
        </TouchableOpacity>
      </View>
    </View>
  );
}
